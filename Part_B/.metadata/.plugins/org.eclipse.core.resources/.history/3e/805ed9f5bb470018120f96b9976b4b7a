package strategies;

import automail.IMailDelivery;
import automail.Robot;
import automail.RobotBig;
import automail.RobotStrong;

public class Automail {
	      
    public Robot robot1, robot2;
    public IMailPool mailPool;
    
    public static final String BOT_WEAK = "weak robot";
    public static final String BOT_STRONG = "strong robot";
    public static final String BOT_BIG = "big robot";
    
    public Automail(IMailDelivery delivery) {
    	// Swap between simple provided strategies and your strategies here
    	    	
    	/** Initialize the MailPool */
    	
    	//// Swap the next line for the one below
    	mailPool = new WeakStrongMailPool();
    	
        /** Initialize the RobotAction */
    	boolean weak = false;  // Can't handle more than 2000 grams
    	boolean strong = true; // Can handle any weight that arrives at the building
    	
    	//// Swap the next two lines for the two below those
    	IRobotBehaviour robotBehaviourW = new MyRobotBehaviour(weak);
    	IRobotBehaviour robotBehaviourS = new MyRobotBehaviour(strong);
    	    	
    	/** Initialize robot */
    	robot1 = new Robot(delivery, mailPool, weak); /* shared behaviour because identical and stateless */
    	robot2 = new Robot(delivery, mailPool, strong);
    }
    
    
    // TODO added chris 24 apr
    // Creates and returns
    public Robot createRobot(IMailDelivery delivery, IMailPool mailPool, String robotName) {
    	switch (robotName) {
    	case (BOT_WEAK):
    		return new RobotBig(delivery, mailPool);
    	case (BOT_STRONG):
    		return new RobotStrong(delivery, mailPool);
    	case (BOT_BIG):
    		return new RobotBig(delivery, mailPool);
    	default:
    		return null;
    	}
    	
    }
    
    
}
